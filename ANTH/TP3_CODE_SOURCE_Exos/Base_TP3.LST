C51 COMPILER V9.59.0.0   BASE_TP3                                                          03/01/2022 11:36:09 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE BASE_TP3
OBJECT MODULE PLACED IN Base_TP3.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Base_TP3.C OPTIMIZE(0,SPEED) REGFILE(.\TP3_IRC.ORC) BROWSE DEBUG OBJECTE
                    -XTEND TABS(2)

line level    source

   1          //------------------------------------------------------------------------------------
   2          // Base_TP3_IRC
   3          //------------------------------------------------------------------------------------
   4          //
   5          // AUTH: FJ
   6          // DATE: 03-03-2009
   7          // Target: C8051F02x
   8          //
   9          // Tool chain: KEIL Eval 'c'
  10          //
  11          //------------------------------------------------------------------------------------
  12          // Includes
  13          //------------------------------------------------------------------------------------
  14          #include <c8051f020.h>                    // SFR declarations
  15          //------------------------------------------------------------------------------------
  16          // 16-bit SFR Definitions for 'F02x
  17          //------------------------------------------------------------------------------------
  18          sfr16 TMR3RL   = 0x92;                    // Timer3 reload value
  19          sfr16 TMR3     = 0x94;                    // Timer3 counter
  20          sfr16 ADC0     = 0xbe;                    // ADC0 data
  21          sfr16 ADC0GT   = 0xc4;                    // ADC0 greater than window
  22          sfr16 ADC0LT   = 0xc6;                    // ADC0 less than window
  23          sfr16 RCAP2    = 0xca;                    // Timer2 capture/reload
  24          sfr16 T2       = 0xcc;                    // Timer2
  25          sfr16 RCAP4    = 0xe4;                    // Timer4 capture/reload
  26          sfr16 T4       = 0xf4;                    // Timer4
  27          sfr16 DAC0     = 0xd2;                    // DAC0 data
  28          sfr16 DAC1     = 0xd5;                    // DAC1 data
  29          
  30          //------------------------------------------------------------------------------------
  31          // Global CONSTANTS
  32          //------------------------------------------------------------------------------------
  33          
  34          #define SYSCLK 22118400 //approximate SYSCLK frequency in Hz
  35          #define LED_On 1
  36          #define LED_Off 0
  37          
  38          extern  code char Sin_table[];
  39          
  40          // Eléments présents sur la carte 8051F020
  41          sbit  LED = P1^6;         // LED verte: '1' = ON; '0' = OFF
  42          sbit BP = P3^7;           // Bouton Poussoir '1' relaché, '0' pressé
  43          
  44          // Eléments de l'application Pilotage d'un système de tri
  45          sbit Tst4 = P3^4;
  46          sbit Tst5 = P3^5;
  47          sbit Tst6 = P3^6;
  48          
  49          //------------------------------------------------------------------------------------
  50          // Function PROTOTYPES
  51          //------------------------------------------------------------------------------------
  52          void Init_Device (void); // Fonction codée dans LIB_Base.c
  53          void fct_tempo(unsigned int);     // Fonction assembleur codée dans Asm_8051_Lib.asm
  54          
C51 COMPILER V9.59.0.0   BASE_TP3                                                          03/01/2022 11:36:09 PAGE 2   

  55          //------------------------------------------------------------------------------------
  56          // MAIN Routine
  57          //------------------------------------------------------------------------------------
  58          void main (void) {
  59   1        //Activitée 1:
  60   1        //Les signaux sont periodiques, mais le signal sur lequel est la LED a une amplitude trop basse pour que 
             -cette derniere s'alume.
  61   1        //Ceci est du a une erreur de config du port. Il faut enable le push pull pour avoir 3.3V.
  62   1        
  63   1        Init_Device();
  64   1        Tst4 = 0;
  65   1        LED = LED_Off;
  66   1        P1MDOUT |= 0x40; // Setting push pull for LED pin
  67   1        P3MDOUT |= 0x10; // Disable OD on TST4 Port
  68   1        //TODO Masquer
  69   1        
  70   1        
  71   1        P3 |= 0x0c; // Configure the INT0 & INT1 pins as Inputs
  72   1        EX0 = 1;    // Enable INT0
  73   1        EA = 1; // Enable ITs
  74   1        
  75   1         while (1)
  76   1         {  
  77   2         LED = ~LED;
  78   2         Tst4 = ~Tst4;
  79   2           
  80   2         // Copying Tst4 to P4 MSB and LSB   
  81   2         if(Tst4 == 1){
  82   3           P4 |= 0x81; // 10000001
  83   3           //P4 |= (1<<7);
  84   3         }
  85   2         else {
  86   3           P4 &= ~0x81; // 01111110
  87   3           //P4 &= ~1;
  88   3         }
  89   2         
  90   2         
  91   2             
  92   2         fct_tempo(60000);     
  93   2         }
  94   1      }
  95          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     45    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
